name: Merge

on:
  pull_request:
    types: [closed]

permissions:
  actions: write
  contents: write

env:
  ACT: false

jobs:
  matrices:
    name: Generate Matrix
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    outputs:
      attrs: ${{ steps.get.outputs.attrs }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup

      - name: Get Attributes
        id: get
        run: echo "attrs=$(nix eval --json --apply builtins.attrNames .#toplevel)" >> "$GITHUB_OUTPUT"

  diff:
    name: Diff Attributes
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    needs: matrices
    strategy:
      matrix:
        attr: ${{ fromJson(needs.matrices.outputs.attrs) }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup

      - name: Build Attribute
        id: build
        env:
          flake_base: github:${{ github.repository }}/${{ github.event.pull_request.base.ref }}
          flake_head: github:${{ github.repository }}/${{ github.event.pull_request.head.ref }}
        run: |
          echo "old=$(nix build --print-out-paths --no-link "$flake_base#toplevel.${{ matrix.attr }}")" >> "$GITHUB_OUTPUT"
          echo "new=$(nix build --print-out-paths --no-link "$flake_head#toplevel.${{ matrix.attr }}")" >> "$GITHUB_OUTPUT"

      - name: Create Diff
        env:
          old: ${{ steps.build.outputs.old }}
          new: ${{ steps.build.outputs.new }}
        run: nix run nixpkgs#nvd -- diff "$old" "$new" > ${{ matrix.attr }}.diff

      - name: Upload Diff
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.attr }}
          path: ${{ matrix.attr }}.diff

  release:
    name: Create Release
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    needs: diff

    steps:
      - name: Download Diff
        uses: actions/download-artifact@v4
        with:
          path: ./changes

      - name: Prepare Diff
        run: |
          echo "## Changes" > body.md
          for diff in ./changes/*/*.diff; do
            {
              echo "#### $(basename "$diff" .diff)"
              echo "\`\`\`diff"
              cat "$diff"
              echo "\`\`\`"
            } >> body.md
          done

      - name: Get Commit
        id: commit
        run: echo "sha=$(git rev-parse ${{ github.sha }}^@ | grep -Fvx ${{ github.event.pull_request.head.sha }})" >> "$GITHUB_OUTPUT"

      - name: Create Release
        uses: ncipollo/release-action@v1.16.0
        with:
          commit: ${{ steps.commit.outputs.sha }}
          tag: ${{ github.event.pull_request.head.ref }}
          name: ${{ github.event.pull_request.merged_at }}
          bodyFile: body.md

  cleanup:
    name: Cleanup
    runs-on: ubuntu-latest
    if: always()

    needs: release

    steps:
      - name: Delete Branch
        uses: actions/github-script@v7.0.1
        with:
          script: |
            github.rest.git.deleteRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `heads/${context.payload.pull_request.head.ref}`,
            })
