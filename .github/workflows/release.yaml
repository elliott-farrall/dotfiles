name: Release

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 1 * *" # Monthly on the first day of the month

permissions:
  contents: write

env:
  ACT: false

jobs:
  get:
    name: Get Attributes
    runs-on:
      - runs-on=${{ github.run_id }}
      - runner=2cpu-linux-x64
      - extras=s3-cache

    outputs:
      attrs: ${{ steps.attrs.outputs.attrs }}
      old-tag: ${{ steps.version.outputs.current_version }}
      new-tag: ${{ steps.version.outputs.next_version }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup

      - name: Get Attributes
        id: attrs
        run: echo "attrs=$(nix eval --json --apply builtins.attrNames .#toplevel)" >> "$GITHUB_OUTPUT"

      - name: Bump Version
        uses: MeilCli/bump-release-action@v2
        id: version
        with:
          config_path: .github/bump.yaml
          pre_release: true

  build:
    name: Build Attributes
    runs-on:
      - runs-on=${{ github.run_id }}
      - runner=2cpu-linux-x64
      - extras=s3-cache
      - disk=large

    needs: get
    strategy:
      matrix:
        attr: ${{ fromJson(needs.get.outputs.attrs) }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup

      - name: Build Attribute
        id: build
        env:
          flake_base: github:${{ github.repository }}?ref=refs/tags/${{ needs.get.outputs.old-tag }}
          flake_head: github:${{ github.repository }}?ref=refs/tags/${{ needs.get.outputs.new-tag }}
        run: |
          nix build -o old "$flake_base#toplevel.${{ matrix.attr }}"
          nix build -o new "$flake_head#toplevel.${{ matrix.attr }}"

      - name: Diff Attribute
        run: nix run nixpkgs#nvd -- diff old new > ${{ matrix.attr }}.diff

      - name: Scan Attribute
        run: nix run nixpkgs#vulnix new > ${{ matrix.attr }}.scan || exit 0

      - name: Upload Assets
        uses: actions/upload-artifact@v4.6.2
        with:
          name: ${{ matrix.attr }}
          path: ${{ matrix.attr }}.*

  release:
    name: Create Release
    runs-on:
      - runs-on=${{ github.run_id }}
      - runner=2cpu-linux-x64
      - extras=s3-cache

    needs: [get, build]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup

      - name: Get Release
        id: release
        uses: KevinRohn/github-full-release-data@v2
        with:
          version: ${{ needs.get.outputs.new-tag }}
          body-markdown-file-path: body.md

      - name: Download Assets
        uses: actions/download-artifact@v4.2.1
        with:
          path: ./assets

      - name: Create Body
        run: |
          echo "## Updates" >> body.md
          for diff in ./assets/*/*.diff; do
            {
              echo "#### $(basename "$diff" .diff)"
              echo "\`\`\`diff"
              cat "$diff"
              echo "\`\`\`"
            } >> body.md
          done

          echo "## Vulnerabilities" >> body.md
          for scan in ./assets/*/*.scan; do
            {
              echo "#### $(basename "$scan" .scan)"
              echo "\`\`\`"
              cat "$scan"
              echo "\`\`\`"
            } >> body.md
          done

      - name: Create Release
        uses: ncipollo/release-action@v1.16.0
        with:
          allowUpdates: true
          tag: ${{ needs.get.outputs.new-tag }}
          bodyFile: body.md
